import 'package:english_words/english_words.dart';
import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:provider/provider.dart';

// States
class WordProvider extends ChangeNotifier {
  String _currentWord = WordPair.random().toString().toLowerCase();

  String get currentWord => _currentWord;

  void newWord() {
    _currentWord = WordPair.random().toString().toUpperCase();
    notifyListeners();
  }
}

void main() {
  runApp(MultiProvider(
    providers: [
      ChangeNotifierProvider(create: (_) => WordProvider()),
    ],
    child: const MyApp(),
  ));
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
        title: 'My app',
        theme: ThemeData(useMaterial3: true, colorSchemeSeed: Colors.pink),
        home: const MyHomePage());
  }
}

// Pages
class MyHomePage extends StatelessWidget {
  const MyHomePage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
            title: const Text('Random Word generator'),
            backgroundColor: Colors.blue),
        floatingActionButton: FloatingActionButton(
          onPressed: () {},
          child: const Text('Add'),
        ),
        bottomNavigationBar: BottomNavigationBar(
          items: const [
            BottomNavigationBarItem(icon: Icon(Icons.home), label: 'Hi'),
            BottomNavigationBarItem(
                icon: Icon(Icons.airplanemode_active), label: 'new')
          ],
        ),
        body: Container(
          alignment: Alignment.center,
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              const Text('Random wordpair down here'),
              const WordDisplay(),
              ElevatedButton(
                  onPressed: () {
                    context.read<WordProvider>().newWord();
                  },
                  child: const Text('Next')),
            ],
          ),
        ));
  }
}

// Components
class WordDisplay extends StatelessWidget {
  const WordDisplay({super.key});

  @override
  Widget build(BuildContext context) {
    return Center(
      child: Column(
        children: [
          Text('My word', style: Theme.of(context).textTheme.headlineMedium),
          Text(context.watch<WordProvider>().currentWord,
              key: const Key('wordState'),
              style: Theme.of(context).textTheme.headlineMedium),
        ],
      ),
    );
  }
}
